<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="16">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="1" title="Set Values: {}">
      <tags/>
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable"/>
        </argument>
      </arguments>
      <parameterValueSources>
        <parameterValueSource url="json:fileScheme=json%3A&amp;filePath=templates%2Fsample2.json&amp;whereComparison=EqualTo&amp;filePathValue=PrimitiveValueImpl+%5B+value%3A+templates%2Fsample2.json%2C+valueId%3Dnull%2C+createdUpdateSeq%3D-1%2C+updatedUpdateSeq%3D-1%5D&amp;expressionLength=-1&amp;expressionOffset=-1&amp;propertyChangeSupport=java.beans.PropertyChangeSupport%4060ea4426" variableName="JSONData" variableScope="Test">
          <sourceValue class="jsonTarget" whereComparison="EqualTo">
            <filePath class="value" valueClass="string">templates/sample2.json</filePath>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="2" title="Set Values: {}">
      <tags/>
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable"/>
        </argument>
      </arguments>
      <parameterValueSources>
        <parameterValueSource variableName="ExcelData" variableScope="Test">
          <cacheToken>C:/Users/ravish.rana/Provar/AXATrainingUpdated/ProvarTraining/templates/file_example_XLSX_50.xlsx;1632487231438</cacheToken>
          <cachedParameters>
            <apiParam name="_0"/>
            <apiParam name="FirstName"/>
            <apiParam name="LastName"/>
            <apiParam name="Gender"/>
            <apiParam name="Country"/>
            <apiParam name="Age"/>
            <apiParam name="Date"/>
            <apiParam name="Id"/>
          </cachedParameters>
          <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
            <workbookPath class="value" valueClass="string">templates/file_example_XLSX_50.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">Sheet1</worksheetName>
            <valuesRange class="value" valueClass="string"/>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="11" title="For Each: {ExcelData}=&gt;{ExcelData.FirstName}">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="ExcelData"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="variable">
            <path element="ExcelData"/>
            <path element="FirstName"/>
          </value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="12"/>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="10" title="Set Values: ExcelSpecificValue">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ExcelSpecificValue</value>
              </namedValue>
              <namedValue name="value">
                <value class="variable">
                  <path element="ExcelData">
                    <filter class="index">
                      <index valueClass="decimal">43</index>
                    </filter>
                  </path>
                  <path element="FirstName"/>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="8" title="Set Values: Value.Item2">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">Value.Item1</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">Test1New</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">Value.Item2</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">Test2Test</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" name="Write" testItemId="6" title="Write: {Value}=&gt;templates/file_example_XLSX_50.xlsx">
      <arguments>
        <argument id="data">
          <value class="variable">
            <path element="Value"/>
          </value>
        </argument>
        <argument id="dataUrl">
          <value class="excelTarget" debug="true" sheetWriteMode="Update">
            <workbookPath class="value" valueClass="string">templates/file_example_XLSX_50.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">Sheet2</worksheetName>
          </value>
        </argument>
        <argument id="targetDescription">
          <value class="value" valueClass="string">templates/file_example_XLSX_50.xlsx</value>
        </argument>
        <argument id="updateValueRange"/>
        <argument id="updateColumnNames">
          <value class="value" valueClass="string">FirstRowOfRange</value>
        </argument>
        <argument id="updateMatchType">
          <value class="value" valueClass="string">MatchColumns</value>
        </argument>
        <argument id="updateMatchLocator">
          <value class="value" valueClass="string">Item1</value>
        </argument>
      </arguments>
      <generatedParameters>
        <apiParam group="result" name="updateValueRange" title="Values Range">
          <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
          <type>
            <textType>
              <constraints>
                <valueConstraint name="disableTemplateEditor">true</valueConstraint>
              </constraints>
            </textType>
          </type>
        </apiParam>
        <apiParam group="result" name="updateColumnNames" title="Column Names">
          <summary>Identifies where the column names are in the spreadsheet:</summary>
          <defaultValue>FirstRowOfRange</defaultValue>
          <type>
            <choiceType>
              <constraints>
                <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
              </constraints>
            </choiceType>
          </type>
        </apiParam>
        <apiParam group="result" internal="true" name="updateMatchType" title="">
          <summary/>
          <defaultValue>RowOrColNumber</defaultValue>
          <type>
            <choiceType>
              <constraints>
                <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
              </constraints>
            </choiceType>
          </type>
        </apiParam>
        <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
          <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
        </apiParam>
      </generatedParameters>
    </apiCall>
  </steps>
</testCase>
